{"files":[{"id":"c3998531-a16f-4188-be46-a4ec5919091a","name":"labnol","type":"server_js","source":"\n\n/**     A  S I M P L E   T W I T T E R   B O T           **/\n/**     \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d          **/\n\n/**    Originally Written by Amit Agarwal @labnol on 03/08/2013    **/\n\n/**     Live demo at http://twitter.com/DearAssistant    **/\n\n/**     Last updated on 09/07/2013 - Twitter API Fix  **/\n\n/**     Edited, and (I think I improved it at least) improved by @fooorrest. **/\n\n\n\n\n\n\nfunction start() {\n  \n\n  \n  // REPLACE THESE DUMMY VALUES\n  \n  var TWITTER_CONSUMER_KEY     \u003d \"AAAA\";\n  \n  var TWITTER_CONSUMER_SECRET  \u003d \"BBBB\";\n  \n  var TWITTER_HANDLE           \u003d \"CCCC\";  \n  \n  var WOLFRAM_API_ID           \u003d \"DDDD\";  \n\n\n\n\n\n\n\n\n  \n  \n  // DO NOT CHANGE ANYTHING BELOW THIS LINE\n  \n  // Store variables\n  \n  ScriptProperties.setProperty(\"TWITTER_CONSUMER_KEY\",    TWITTER_CONSUMER_KEY);\n\n  ScriptProperties.setProperty(\"TWITTER_CONSUMER_SECRET\", TWITTER_CONSUMER_SECRET);\n\n  ScriptProperties.setProperty(\"TWITTER_HANDLE\",          TWITTER_HANDLE);\n\n  ScriptProperties.setProperty(\"WOLFRAM_API_ID\",          WOLFRAM_API_ID);\n\n  ScriptProperties.setProperty(\"MAX_TWITTER_ID\",          0);\n    \n  // Delete exiting triggers, if any\n  \n  var triggers \u003d ScriptApp.getScriptTriggers();\n  \n  for(var i\u003d0; i \u003c triggers.length; i++) {\n    ScriptApp.deleteTrigger(triggers[i]);\n  }\n    \n  // Setup trigger to read Tweets every five minutes\n  \n  ScriptApp.newTrigger(\"fetchTweets\")\n           .timeBased()\n           .everyMinutes(1)\n           .create();\n     \n}\n\nfunction oAuth() {\n\n  var oauthConfig \u003d UrlFetchApp.addOAuthService(\"twitter\");\n  oauthConfig.setAccessTokenUrl(\"https://api.twitter.com/oauth/access_token\");\n  oauthConfig.setRequestTokenUrl(\"https://api.twitter.com/oauth/request_token\");\n  oauthConfig.setAuthorizationUrl(\"https://api.twitter.com/oauth/authorize\");\n  oauthConfig.setConsumerKey(ScriptProperties.getProperty(\"TWITTER_CONSUMER_KEY\"));\n  oauthConfig.setConsumerSecret(ScriptProperties.getProperty(\"TWITTER_CONSUMER_SECRET\"));\n \n}\n\nfunction fetchTweets() {\n\n  oAuth();\n  \n  var twitter_handle \u003d ScriptProperties.getProperty(\"TWITTER_HANDLE\");\n  \n  var phrase \u003d \"lang:en+to:\" + twitter_handle; // English languate tweets sent to @labnol\n  var search \u003d \"https://api.twitter.com/1.1/search/tweets.json?count\u003d5\u0026include_entities\u003dfalse\u0026result_type\u003drecent\u0026q\u003d\"; \n  search \u003d search + encodeString(phrase) + \"\u0026since_id\u003d\" + ScriptProperties.getProperty(\"MAX_TWITTER_ID\");    \n      \n  var options \u003d\n  {\n    \"method\": \"get\",\n    \"oAuthServiceName\":\"twitter\",\n    \"oAuthUseToken\":\"always\"\n  };\n  \n  try {\n\n    var result \u003d UrlFetchApp.fetch(search, options);    \n\n    if (result.getResponseCode() \u003d\u003d\u003d 200) {\n      \n      var data \u003d Utilities.jsonParse(result.getContentText());\n      \n      if (data) {\n        \n        var tweets \u003d data.statuses;\n        \n        for (var i\u003dtweets.length-1; i\u003e\u003d0; i--) {\n          \n          var question \u003d tweets[i].text.replace(new RegExp(\"\\@\" + twitter_handle, \"ig\"), \"\");\n          var answer   \u003d askWolframAlpha(question);\n          \n          sendTweet(tweets[i].user.screen_name, tweets[i].id_str, answer);          \n        }\n      }\n    }\n  } catch (e) {\n    Logger.log(e.toString());\n  }\n}\n\nfunction sendTweet(user, reply_id, tweet) {\n\n  var options \u003d\n  {\n    \"method\": \"POST\",\n    \"oAuthServiceName\":\"twitter\",\n    \"oAuthUseToken\":\"always\"    \n  };\n  \n  var status \u003d \"https://api.twitter.com/1.1/statuses/update.json\";\n  \n  status \u003d status + \"?status\u003d\" + encodeString(\"@\" + user + \" \" + tweet);\n  status \u003d status + \"\u0026in_reply_to_status_id\u003d\" + reply_id;\n  \n  try {\n    var result \u003d UrlFetchApp.fetch(status, options);\n    ScriptProperties.setProperty(\"MAX_TWITTER_ID\", reply_id);\n    Logger.log(result.getContentText());    \n  }  \n  catch (e) {\n    Logger.log(e.toString());\n  }\n  \n  \n}\n\nfunction askWolframAlpha(q) {\n  \n  var request  \u003d \"http://api.wolframalpha.com/v2/query?podindex\u003d2\u0026format\u003dplaintext\u0026appid\u003d\" \n                 + ScriptProperties.getProperty(\"WOLFRAM_API_ID\") + \"\u0026input\u003d\" + encodeString(q);\n  \n  var answer \u003d Xml.parse(UrlFetchApp.fetch(request).getContentText(), true);\n  \n  if (answer.queryresult.success \u003d\u003d \"true\")    \n    return answer.queryresult.pod.subpod.plaintext.Text;\n  else \n    return \"Sorry but I do not have an answer to that question. Please try another one.\";\n  \n  \n}\n\n// Thank you +Martin Hawksey - you are awesome\n\nfunction encodeString (q) {\n  \n  // Update: 09/06/2013\n  \n  // Google Apps Script is having issues storing oAuth tokens with the Twitter API 1.1 due to some encoding issues.\n  // Henc this workaround to remove all the problematic characters from the status message.\n  \n  var str \u003d q.replace(/\\(/g,\u0027{\u0027).replace(/\\)/g,\u0027}\u0027).replace(/\\[/g,\u0027{\u0027).replace(/\\]/g,\u0027}\u0027).replace(/\\!/g, \u0027|\u0027).replace(/\\*/g, \u0027x\u0027).replace(/\\\u0027/g, \u0027\u0027);\n  return encodeURIComponent(str);\n\n//   var str \u003d  encodeURIComponent(q);\n//   str \u003d str.replace(/!/g,\u0027%21\u0027);\n//   str \u003d str.replace(/\\*/g,\u0027%2A\u0027);\n//   str \u003d str.replace(/\\(/g,\u0027%28\u0027);\n//   str \u003d str.replace(/\\)/g,\u0027%29\u0027);\n//   str \u003d str.replace(/\u0027/g,\u0027%27\u0027);\n//   return str;\n\n}\n"}]}